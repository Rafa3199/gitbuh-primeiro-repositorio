Caderno de Anotações do Curso "Linux do Zero" da DIO:

Aula 01 - Navegando pelo sistema de Arquivos:
	"ip a" - Ver informações sobre o IP em uso.
	"clear" - Limpar a tela (ctrl + L faz a mesma coisa)
	"pwd" - Mostra o caminho de onde o usuário está localizado

No linux, a "/" indica o diretório raiz, a pasta mãe de todas as outras pastas. Como se fosse o diretório
"Meus arquivos" no Windows.

	"cd" - Chande Directory, usado para se mover entre as pastas nos linux.
	"cd /" - Usado para voltar ao diretório raiz.
	"cd /(nome do diretório ou arquivo)" - Vai se mover para algum diretório ou arquivo que esteja no diretório 
							   raiz.
	"cd (nome do diretório ou arquivo)" - Vai se mover para algum diretório ou arquivo que esteja no diretório
							  atual do usuário.
	"cd .." - Volta um diretório ou arquivo para trás.
	"cd ~" - Vai direto para a pasta e diretório do usuário.

É possível mesclar esses dois argumentos, voltando para um lugar atrás e já entrando direto no diretório ou
arquivo desejado

	"cd ../(nome do arquivo ou diretório)"

Para saber para onde ir, caso você não tenha costume com o Linux ou tenha entrado por um acesso remoto numa máquina
aleatória, utilize o seguinte comando:

	"ls" - O comando "ls" sozinho vai de cara mostrar todas as pastas disponíveis, seja do diretório principal
		 ou de qualquer outro local que você esteja posicionado.

O comando "ls" pode ser manipulado com alguns códigos complementares, que serão estudados mais para frente, de
forma que a vizualização das pastas e arquivos disponíveis fique melhor disposta.

	"ls | more" - Cria uma barra de rolagem ficticia, para melhor leitura de muitos dados que estejam disponíveis
			  para o usuário.
Obs.: Se em determinado ponto, for identificado o que se procura e não quiser ir até o final da lista disposta,
é possível utilizar o comando: "left ctrl + C" para cancelar a visualização do comando "ls | more".

Ainda com o comando "ls" é possível fazer uma busca direta pelo nome do arquivo

	"ls (nome do arquivo)" - Vai retornar o nome do arquivo ou diretório ou uma mensagem de erro de não
					 localização do arquivo ou diretório.
	"ls (fração do nome do arquivo) - Vai retornar todos os arquivos com aquela fração, caso não se saiba o
						     nome específico.
	"ls (inicial do nome do arquivo) + * - Vai retornar todos os arquivos com aquela inicial, listando ainda
							   subpastas ou arquivos dentro dos listados.
	"ls m?g*" - Vai procurar um arquivo com inicial "m", qualquer coisa na segunda letra, obrigatoriamente "g"
			na terceira letra e "*" para puxar todos os arquivos com essa correspondencia.

Pode ainda ter a situação de vários arquivos com uma mesma raiz, e enumerações diferentes, exemplo:
arquivo1.txt
arquivo2.txt
arquivo3.txt
arquivo4.txt
arquivo5.txt

Nesse caso, o comando "ls" pode ser usado como filtro para exibir uma sessão específica dos arquivos, escolher um
intervalo para não ser exibido, exibir apenas um intervalo específico.

	"ls arquivo[1-3]" - Vai exibir os arquivos de 1 até 3
	"ls arquivo[2,4]" - Vai exibir os arquivos 2 e 4
	"ls arquivo[^3,5] - Vai exibir os arquivos 1, 2 e 4
	"ls arquivo[^1-3} - Vai exibir os arquivos 2, 4 e 5

É possível fazer uma busca em qualquer diretório, estando no diretório raiz ou um diretório qualquer, não há limite
para o range que é possível fazer essa procura.

	"ls /(nome do diretório)" - Vai listar os arquivos do diretório especificado.

Para criar um diretório (pasta) no linux utilizamos o seguinte comando:

	"mkdir" - Criar diretórios no Linux (Make Directory)
	"mkdir 'a' 'b'" - Criar mais de um diretório ao mesmo tempo

Tendo a autorização e sabendo o caminho específico, é possível criar pastas em qualquer lugar, de qualquer lugar.
Supondo que o usuário esteja na raiz e queria criar uma pasta dentro do ambiente do usuário:

	"mkdir /home/ubuntu/Planilhas/(nome do diretório a ser criado)" - Vai criar uma pasta nesse caminho, mesmo
												estando na raiz.

Para criar diretórios com nome composto utiliza-se aspas simples ('')

	"mkdir '(nome do diretório)'" - Criar diretório com nome composto

Já para excluir um diretório usamos o seguinte comando:

	"rmdir" - Remover diretórios no Linux (Remove Directory)
	"rmdir 'a' 'b'" - Remover mais de um diretório ao mesmo tempo

Para excluir um arquivo, utiliza-se o "Remove" apenas:

	"rm" - Remover arquivos no Linus
	"rm arquivo*" - Vai excluir todos os arquivos que tenham "arquivo"
	"rm *.txt" - Vai excluir todos os arquivos do tipo .txt
	"rm -rf" - Remove forçadamento o diretório especificado, excluindo tudo o que tiver dentro do Diretório e o
		     próprio Diretório.

Aula 02 - Obtendo Ajuda com Comandos:
	"--help" - Exibe a lista de comandos possíves para o comando que está tentando ser passado.

É importante sempre ler a ajuda disponível, entender cada comando e saber a disponibilidade daquilo que você está
tentando executar. Nem todos os comandos tem o "--help" disponível, mas existe o comando "man" para exibir uma
ajuda descritiva do comando que você quer executar.

No Linux, é possível criar usuários e aloca-los em grupos e cada grupo vai ter uma permissão específica.
O usuário dos exercícios está no grupo "Admin" e "Sudo" o que permite a ele a quebra das faltas de permissões para
executar alguns comandos, como excluir diretórios da raiz.
Para fazer essa quebra, é necessário usar o comando "sudo" como pré-fixo do código desejado:

	"sudo touch texto1.txt" - Vai criar um arquivo .txt independente do local que você esteja, liberando todas as
					  permissões ao usuário.

Porém só será possível utilizar o "sudo" se o usuário estiver dentro dos grupos "Admin" e "Sudo". Mais para frente
vamos aprender a mover usuários entre grupos, criar grupos e editar permissões. (Já foi visto como fazer isso na
AWS, pelas aulas da Escola da Nuvem).

É possível também logar como usuário root direto e não ter que ficar quebrando as permissões do usuário.
Fazemos isso primeiro atribuindo uma senha ao usuário root, que já está criado, mas precisa dessa senha atribuida
para que ele possa ser acessado:

	"sudo passwd root" - Atribuir senha de acesso ao usuário root

Após a atribuição da senha, para logar no usuário root é preciso escrever o comando "su":

	"su" - Acessa o usuário root (lembre da senha criada)

Não é recomendado que o login no usuário root seja permanente, pois ele não possui nenhuma restrição e algo feito
errado não pode ser desfeito tão facilmente no Linux, como por exemplo excluir uma diretório importante ou arquivo.
Então assim que terminar as atividades do usuário root, faça "log off" através do comando "su" novamente, mas
indicando o usuário desejado:

	"su (nome do usuário)" - Sai do usuário root para qualquer outro usuário

Note que essa mudança, a partir do usuário root, não vai requerer senha do usuário padrão, o que pode tende a ser
extremamente delicado também. Então muito cuidado com todas as questões envolvendo o usuário root.

Aula 03 - Trabalhando com Arquivos de Texto
Diferente do Windows, exitem diversos tipos de editores de texto para Linux. Porém, existem dois que são mais
famosos e que baseiam as aulas desse curso:
- vi
- nano

O "vi" é um pouco mais complicado de ser manuseado, por questões de layout e comandos, já o nano mais simples e
prático.
Por exemplo:

	"vi leiame.txt" - Vai criar um arquivo .txt e abrir direto para edição do mesmo

Porém no "vi" a primeira tela não será a tela de edição de arquivo, é necessário dar um comando com a letra "i"
para acessar a parte de edição do arquivo.

Após a edição conculida, para editar e salvar o arquivo são necessários alguns comandos:

	Tecla "esc" - Sai do modo de edição
	Tecla ":" - Abre um mini prompt de comando para executar ações no arquivo
		"q" - Dentro do prompt de ações vai sair do arquivo
		"w" - Dentro do prompt de ações vai salvar o arquivo
		"wq" - Dentro do prompt de ações vai salver e sair do arquivo

Esse comandos foram ensinados em aula, sem conhecimento prévio, sério dificil utilizar a ferramenta "vi"

Já o "nano" é mais prático, pois ele abre o arquivo direto na parte de edição e além disso, todos os comandos
disponíveis para a ferramenta estão dispostos na parte debaixo.

	"nano leiame.txt" - Vai criar um arquivo .txt e abrir direto para edição do mesmo

É importante ressaltar que ele só vai criar um arquivo novo, caso o arquivo não exista ainda, funciona da mesma
forma para o "vi".

Aula 04 - Histórico de Comandos usuário
	"history" - Esse comando vai listar todos os comandos utilizados pelo usuário que está logado
	"!3" - Vai executar novamente o terceiro comando da lista de comandos utilizados pelo usuário
	"!?ls?" - Vai executar o comando que for encontrado com esses paramentos, no caso mais provável um "ls"
	"history | grep "(nome do diretório)" - Vai exibir o histórico de comandos utilizados para aquele diretório

É possível alterar a maneira com o comando "history" é exibido:

	"export HISTTIMEFORMAT= (ver tabelas de formatos)"

%d - Dia
%m - Mês
%y - Ano
%H - Horas
%M - Minutos
%S - Segundos
%F - Data completa (Y-M-D format)
%T - Tempo (H:S:M format)
%c - Completo

O comando "history" acompanhado de uma variável pode excluir, gerar arquivos dentre outras funções que estão
disponíveis para consulta com o comando "--help".