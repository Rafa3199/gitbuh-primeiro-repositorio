Caderno de Anotações do Curso "Linux do Zero" da DIO:

Aula 01 - Navegando pelo sistema de Arquivos:
	"ip a" - Ver informações sobre o IP em uso.
	"clear" - Limpar a tela (ctrl + L faz a mesma coisa)
	"pwd" - Mostra o caminho de onde o usuário está localizado

No linux, a "/" indica o diretório raiz, a pasta mãe de todas as outras pastas. Como se fosse o diretório
"Meus arquivos" no Windows.

	"cd" - Chande Directory, usado para se mover entre as pastas nos linux.
	"cd /" - Usado para voltar ao diretório raiz.
	"cd /(nome do diretório ou arquivo)" - Vai se mover para algum diretório ou arquivo que esteja no diretório 
							   raiz.
	"cd (nome do diretório ou arquivo)" - Vai se mover para algum diretório ou arquivo que esteja no diretório
							  atual do usuário.
	"cd .." - Volta um diretório ou arquivo para trás.
	"cd ~" - Vai direto para a pasta e diretório do usuário.

É possível mesclar esses dois argumentos, voltando para um lugar atrás e já entrando direto no diretório ou
arquivo desejado

	"cd ../(nome do arquivo ou diretório)"

Para saber para onde ir, caso você não tenha costume com o Linux ou tenha entrado por um acesso remoto numa máquina
aleatória, utilize o seguinte comando:

	"ls" - O comando "ls" sozinho vai de cara mostrar todas as pastas disponíveis, seja do diretório principal
		 ou de qualquer outro local que você esteja posicionado.

O comando "ls" pode ser manipulado com alguns códigos complementares, que serão estudados mais para frente, de
forma que a vizualização das pastas e arquivos disponíveis fique melhor disposta.

	"ls | more" - Cria uma barra de rolagem ficticia, para melhor leitura de muitos dados que estejam disponíveis
			  para o usuário.
Obs.: Se em determinado ponto, for identificado o que se procura e não quiser ir até o final da lista disposta,
é possível utilizar o comando: "left ctrl + C" para cancelar a visualização do comando "ls | more".

Ainda com o comando "ls" é possível fazer uma busca direta pelo nome do arquivo

	"ls (nome do arquivo)" - Vai retornar o nome do arquivo ou diretório ou uma mensagem de erro de não
					 localização do arquivo ou diretório.
	"ls (fração do nome do arquivo) - Vai retornar todos os arquivos com aquela fração, caso não se saiba o
						     nome específico.
	"ls (inicial do nome do arquivo) + * - Vai retornar todos os arquivos com aquela inicial, listando ainda
							   subpastas ou arquivos dentro dos listados.
	"ls m?g*" - Vai procurar um arquivo com inicial "m", qualquer coisa na segunda letra, obrigatoriamente "g"
			na terceira letra e "*" para puxar todos os arquivos com essa correspondencia.

Pode ainda ter a situação de vários arquivos com uma mesma raiz, e enumerações diferentes, exemplo:
arquivo1.txt
arquivo2.txt
arquivo3.txt
arquivo4.txt
arquivo5.txt

Nesse caso, o comando "ls" pode ser usado como filtro para exibir uma sessão específica dos arquivos, escolher um
intervalo para não ser exibido, exibir apenas um intervalo específico.

	"ls arquivo[1-3]" - Vai exibir os arquivos de 1 até 3
	"ls arquivo[2,4]" - Vai exibir os arquivos 2 e 4
	"ls arquivo[^3,5] - Vai exibir os arquivos 1, 2 e 4
	"ls arquivo[^1-3} - Vai exibir os arquivos 2, 4 e 5

É possível fazer uma busca em qualquer diretório, estando no diretório raiz ou um diretório qualquer, não há limite
para o range que é possível fazer essa procura.

	"ls /(nome do diretório)" - Vai listar os arquivos do diretório especificado.

Para criar um diretório (pasta) no linux utilizamos o seguinte comando:

	"mkdir" - Criar diretórios no Linux (Make Directory)
	"mkdir 'a' 'b'" - Criar mais de um diretório ao mesmo tempo

Tendo a autorização e sabendo o caminho específico, é possível criar pastas em qualquer lugar, de qualquer lugar.
Supondo que o usuário esteja na raiz e queria criar uma pasta dentro do ambiente do usuário:

	"mkdir /home/ubuntu/Planilhas/(nome do diretório a ser criado)" - Vai criar uma pasta nesse caminho, mesmo
												estando na raiz.

Para criar diretórios com nome composto utiliza-se aspas simples ('')

	"mkdir '(nome do diretório)'" - Criar diretório com nome composto

Já para excluir um diretório usamos o seguinte comando:

	"rmdir" - Remover diretórios no Linux (Remove Directory)
	"rmdir 'a' 'b'" - Remover mais de um diretório ao mesmo tempo

Para excluir um arquivo, utiliza-se o "Remove" apenas:

	"rm" - Remover arquivos no Linux
	"rm arquivo*" - Vai excluir todos os arquivos que tenham "arquivo"
	"rm *.txt" - Vai excluir todos os arquivos do tipo .txt
	"rm -rf" - Remove forçadamento o diretório especificado, excluindo tudo o que tiver dentro do Diretório e o
		     próprio Diretório.

Aula 02 - Obtendo Ajuda com Comandos:
	"--help" - Exibe a lista de comandos possíves para o comando que está tentando ser passado.

É importante sempre ler a ajuda disponível, entender cada comando e saber a disponibilidade daquilo que você está
tentando executar. Nem todos os comandos tem o "--help" disponível, mas existe o comando "man" para exibir uma
ajuda descritiva do comando que você quer executar.

No Linux, é possível criar usuários e aloca-los em grupos e cada grupo vai ter uma permissão específica.
O usuário dos exercícios está no grupo "Admin" e "Sudo" o que permite a ele a quebra das faltas de permissões para
executar alguns comandos, como excluir diretórios da raiz.
Para fazer essa quebra, é necessário usar o comando "sudo" como pré-fixo do código desejado:

	"sudo touch texto1.txt" - Vai criar um arquivo .txt independente do local que você esteja, liberando todas as
					  permissões ao usuário.

Porém só será possível utilizar o "sudo" se o usuário estiver dentro dos grupos "Admin" e "Sudo". Mais para frente
vamos aprender a mover usuários entre grupos, criar grupos e editar permissões. (Já foi visto como fazer isso na
AWS, pelas aulas da Escola da Nuvem).

É possível também logar como usuário root direto e não ter que ficar quebrando as permissões do usuário.
Fazemos isso primeiro atribuindo uma senha ao usuário root, que já está criado, mas precisa dessa senha atribuida
para que ele possa ser acessado:

	"sudo passwd root" - Atribuir senha de acesso ao usuário root

Após a atribuição da senha, para logar no usuário root é preciso escrever o comando "su":

	"su" - Acessa o usuário root (lembre da senha criada)

Não é recomendado que o login no usuário root seja permanente, pois ele não possui nenhuma restrição e algo feito
errado não pode ser desfeito tão facilmente no Linux, como por exemplo excluir uma diretório importante ou arquivo.
Então assim que terminar as atividades do usuário root, faça "log off" através do comando "su" novamente, mas
indicando o usuário desejado:

	"su (nome do usuário)" - Sai do usuário root para qualquer outro usuário

Note que essa mudança, a partir do usuário root, não vai requerer senha do usuário padrão, o que pode tende a ser
extremamente delicado também. Então muito cuidado com todas as questões envolvendo o usuário root.

Aula 03 - Trabalhando com Arquivos de Texto
Diferente do Windows, exitem diversos tipos de editores de texto para Linux. Porém, existem dois que são mais
famosos e que baseiam as aulas desse curso:
- vi
- nano

O "vi" é um pouco mais complicado de ser manuseado, por questões de layout e comandos, já o nano mais simples e
prático.
Por exemplo:

	"vi leiame.txt" - Vai criar um arquivo .txt e abrir direto para edição do mesmo

Porém no "vi" a primeira tela não será a tela de edição de arquivo, é necessário dar um comando com a letra "i"
para acessar a parte de edição do arquivo.

Após a edição conculida, para editar e salvar o arquivo são necessários alguns comandos:

	Tecla "esc" - Sai do modo de edição
	Tecla ":" - Abre um mini prompt de comando para executar ações no arquivo
		"q" - Dentro do prompt de ações vai sair do arquivo
		"w" - Dentro do prompt de ações vai salvar o arquivo
		"wq" - Dentro do prompt de ações vai salver e sair do arquivo

Esse comandos foram ensinados em aula, sem conhecimento prévio, sério dificil utilizar a ferramenta "vi"

Já o "nano" é mais prático, pois ele abre o arquivo direto na parte de edição e além disso, todos os comandos
disponíveis para a ferramenta estão dispostos na parte debaixo.

	"nano leiame.txt" - Vai criar um arquivo .txt e abrir direto para edição do mesmo

É importante ressaltar que ele só vai criar um arquivo novo, caso o arquivo não exista ainda, funciona da mesma
forma para o "vi".

Aula 04 - Histórico de Comandos usuário
	"history" - Esse comando vai listar todos os comandos utilizados pelo usuário que está logado
	"!3" - Vai executar novamente o terceiro comando da lista de comandos utilizados pelo usuário
	"!?ls?" - Vai executar o comando que for encontrado com esses paramentos, no caso mais provável um "ls"
	"history | grep "(nome do diretório)" - Vai exibir o histórico de comandos utilizados para aquele diretório

É possível alterar a maneira com o comando "history" é exibido:

	"export HISTTIMEFORMAT= (ver tabelas de formatos)"

%d - Dia
%m - Mês
%y - Ano
%H - Horas
%M - Minutos
%S - Segundos
%F - Data completa (Y-M-D format)
%T - Tempo (H:S:M format)
%c - Completo

O comando "history" acompanhado de uma variável pode excluir, gerar arquivos dentre outras funções que estão
disponíveis para consulta com o comando "--help".

Aula 05 - Criando Usuários no Sistema
	"useradd (nome do usuário)" - Cria um novo usuário.

Esse comando não aceita acento, espaço em branco ou caracter especial. É o comando básico para criação de usuários,
como boa parte dos comandos e como tem sido visto até aqui, existem os complementos ao comando que executam ações
específicas e que ajudam na hora de criar um usuário

	"useradd joao -m" - Cria a pasta de usuário no diretório home
	"useradd joao -c "(comentário)"" - Adiciona uma nota ao usuário, podendo conter acentos, espaços, etc.
	"useradd joao -s (shell de comandos)" - Direciona o usário para o tipo de shell de comandos a ser usado
	"useradd joao -e 26/06/2023" - Determina uma data específica para aquele usuário ser excluido do sistma
	"useradd joao -m -c "(comentário)" -s (shell de comando) -e 26/06/2023" - Da pra fazer tudo ao mesmo tempo
	
	"useradd joao -p $(openssl passwd -crypt Senha123)" - Cria uma senha automaticamente para o usuário criado.
										ATENÇÃO: Esse comando no funcionou no Ubuntu criado na
											   AWS.

Também é possível atribuir senha ao usuário criado, através do comando

	"passwd (nome de usuário)" - Vai atribuir uma senha ao usuário especificado.

Para excluir um usuário existe um comando muito parecido com o de criar o usuário

	"userdel (nome do usuário)" - Exclui um usuário.

O "userdel" pode ser acompanhado também de comando auxiliares para executar funções conjuntas na hora de excluir um
usuário e elas podem ser entendidas através do comando "--help", como já visto antes.

Caso queira editar alguma informação já criada ou editar algo que não foi criado por algum acaso, é possível usar o
comando

	"usermod" - Acompanhado de auxiliares, pode editar e adicionar todos os comandos de criação de um usuário.
	"usermod (nome do usuário) -c "(Comentário)" - Vai editar o comentário ou adicionar um.
	"usermod -e 26/02/2023" - Altera a data de expirar o usuário criado.

Obs.: É possível passar o comando "-e" no "passwd" para determinar uma data limite para expirar a senha do usuário.
ou até mesmo o "passwd -e" para resetar automaticamente no próximo login a senha.

E como checar quais usuários estão cadastrados em sistema?

	"cat /etc/passwd" - Vai listar uma série de informações, dentre elas, as informações de usuários cadastrados

Aula 06 - Criando um script para criar vários usuários
É possível ainda criar vários usuários ao mesmo tempo com um script, utilizando os comandos vistos anteriormente.
Para criar o script, você pode tanto destinar para uma pasta já existe, como criar uma pasta nova e colocar o
arquivo dentro dessa nova pasta.

Crie o arquivo com o comando "nano" ou "vi" vistos anteriormente, com o final ".sh".
Dentro do editor do arquivo, desenvolva o comando, criando um scritp que será executado pelo sistema. Exemplo:
#!/bin/bash

echo "Criando usuários do sistema..."
useradd guest -c "Usuário convidado" -s /bin/bash -m -p $(openssl passwd -crypt Senha123)
passwd guest -e

useradd guest1 -c "Usuário convidado" -s /bin/bash -m -p $(openssl passwd -crypt Senha123)
passwd guest1 -e

useradd guest2 -c "Usuário convidado" -s /bin/bash -m -p $(openssl passwd -crypt Senha123)
passwd guest2 -e

useradd guest3 -c "Usuário convidado" -s /bin/bash -m -p $(openssl passwd -crypt Senha123)
passwd guest3 -e
echo "Finalizado!!"

Salve o arquivo criado e saia do editor de arquivos.
Utilize  comando "chmod +x (nome do arquivo).sh" para ativar o arquivo. - Vamos entender mais sobre esse comando
												  mais para frente.
Para executar o script digite "./(nome do arquivo).sh)"

Pronto, todos os usuários foram criados e agora ao acessa-los a senha será redefinida.

Obs.: Se estiver programando pelo Ubuntu virtual no EC2 da AWS, o comando passwd não irá funcionar com o "-crypt"
	sendo necessário não utilizar esse comando para o correto funcionamento desse script na plataforma da AWS.

Aula 07 - Determinando e Criando novos Grupos para Usuários
Para um usuário já cadastrado no sistema, a melhor maneira de realoca-lo a um grupo é através do comando "usermod"
como vimos anteriormente.

	"usermod -G (grupo 1, grupo 2, ...) (nome do usuário)" - Vai adicionar o usuário já criado dentro dos grupos
										   especificados.
	"usermod -g (nome do grupo) (nome do usuário)" - Vai adicionar o usuário a um novo grupo por vez.

As vezesm para a mudança surtir efeito, é necessário fazer o logoff no sistema ou reinicia-lo.

Já para criar um novo grupo, os comandos são bem parecidos com os comandos de criar e excluir novos usuários

	"groupadd" - Adiciona um grupo
	"groupdel" - Exclui um grupo

Nos grupos o comando "usermod -G" vai ser usado para mover os usuários entre os grupos:

	"usermod -G (grupo1,grupo2) (nome do usuário)" - Vai tirar o usuário de grupos que ele já esteja e move-lo
									 para os grupos, ou o grupo, especificado.

Para remover um usuário de um grupo, sem precisar move-lo, é só usar o comando "gpasswd":

	"gpasswd -d (nome do usuário) (grupo)" - Sendo possível remover apenas de um grupo por vez.

Aula 08 - Permissões
Uma pasta criada, normalmente vai ser "posse" do Super Usuário, o "root". Mas é possível alterar isso através do
comando "chown":

	"chown (nome do usuário):(nome do grupo) /(nome do diretório)/" - Vamos entender melhor esse comando!

Quando usamos o comando "ls -l" o prompt vai nos mostrar as permissões, quem é o dono, qual o grupo, entre outras
informações relacionadas aos diretórios. O comando "chown" que significa "Change Owner" vai justamente mudar as
informaçãoes referentes ao dono e grupo do diretório.

	"chown (usuário que será o dono):(grupo de usuários que terão permissões) /(diretório referencia)"

Ainda é possível alterar as permissões que o dono, o grupos e usuários de fora tem sobre os diretórios. Vamos fazer
isso utilizando de uma comando já visto antes, mas entendendo cada etapa dele que é o comando "chmod". Mas antes,
vamos entender a base do entendimento desse comando:

Leitura (r) - 4
Gravação (w) - 2
Execução (x) - 1
Nenhuma - 0

Cada diretório ou arquivo criado vai vir com permissões espefícicas: 
	"drwxr-xr--" - Se for um diretório
	"-rwxr-xr--" - Se for um arquivo
1ª letra: d = directory
	    - = file
2ª letra: r = leitura
	    - = sem permissão de leitura
3ª letra: w = editar, excluir e criar
	    - = sem permissão de editar, excluir e criar
4ª letra: x = executar, acessar arquivos/diretórios
	    - = sem permissão de executar, acessar arquivos/diretórios

As letras seguintes seguem a mesma lógica, porém no seguinte padrão de permissões:

	"d/rwx/r-x/r--" - tipo de arquivo/permissões do dono/permissões do grupo/permissões de terceiros

Porém como visto acima, essas letras represetam números correspondentes, que podem ser representados no comando:

	"chmod 750 /adm/" - 7 (4+2+1) = Permissão total
				- 6 (4+2) = Permissão de Leitura e Gravação
				- 5 (4+1) = Permissão de Leitura e Execução
				- 4 (4) = Permissão apenas de Leitura
				- 3 (2+1) = Permissão de Gravação e Execução
				- 2 (2) = Permissão de Gravação
				- 1 (1) = Permissão de Execução
				- 0 (0) = Nenhuma permissão
	"chmod 7/5/0 /adm/" = chmod (dono/grupo/terceiros) (pasta ou arquivo)